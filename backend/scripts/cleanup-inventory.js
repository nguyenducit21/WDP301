// scripts/cleanup-inventory.js
require('dotenv').config();
const mongoose = require('mongoose');
const Inventory = require('../models/inventory.model');
const MenuItemRecipe = require('../models/menuItemRecipe.model');

// ƒê·ªãnh nghƒ©a danh s√°ch nguy√™n li·ªáu c∆° b·∫£n
const essentialIngredients = [
    // Th·ªãt c√° (6 lo·∫°i)
    { name: "Th·ªãt b√≤", category: "th·ªãt", unit: "kg", cost: 450000, min_stock: 3 },
    { name: "Th·ªãt heo", category: "th·ªãt", unit: "kg", cost: 120000, min_stock: 3 },
    { name: "S∆∞·ªùn heo", category: "th·ªãt", unit: "kg", cost: 150000, min_stock: 2 },
    { name: "B√¨ heo", category: "th·ªãt", unit: "kg", cost: 80000, min_stock: 2 },
    { name: "C√°", category: "c√°", unit: "kg", cost: 80000, min_stock: 3 },
    { name: "T√¥m", category: "c√°", unit: "kg", cost: 250000, min_stock: 2 },
    
    // Rau c·ªß (6 lo·∫°i)
    { name: "Rau s·ªëng", category: "rau_c·ªß", unit: "kg", cost: 30000, min_stock: 1 },
    { name: "Rau th∆°m", category: "rau_c·ªß", unit: "kg", cost: 40000, min_stock: 1 },
    { name: "H√†nh l√°", category: "rau_c·ªß", unit: "kg", cost: 35000, min_stock: 1 },
    { name: "C√† chua", category: "rau_c·ªß", unit: "kg", cost: 20000, min_stock: 1 },
    { name: "D∆∞a leo", category: "rau_c·ªß", unit: "kg", cost: 15000, min_stock: 1 },
    { name: "X√† l√°ch", category: "rau_c·ªß", unit: "kg", cost: 25000, min_stock: 1 },
    
    // ƒê·ªì kh√¥ (5 lo·∫°i)
    { name: "B√°nh ph·ªü", category: "ƒë·ªì_kh√¥", unit: "kg", cost: 35000, min_stock: 5 },
    { name: "B√∫n", category: "ƒë·ªì_kh√¥", unit: "kg", cost: 18000, min_stock: 5 },
    { name: "C∆°m", category: "ƒë·ªì_kh√¥", unit: "kg", cost: 25000, min_stock: 10 },
    { name: "Mi·∫øn", category: "ƒë·ªì_kh√¥", unit: "kg", cost: 60000, min_stock: 3 },
    { name: "B√°nh tr√°ng", category: "ƒë·ªì_kh√¥", unit: "kg", cost: 20000, min_stock: 2 },
    
    // Gia v·ªã (6 lo·∫°i)
    { name: "N∆∞·ªõc m·∫Øm", category: "gia_v·ªã", unit: "l√≠t", cost: 120000, min_stock: 2 },
    { name: "ƒê∆∞·ªùng", category: "gia_v·ªã", unit: "kg", cost: 22000, min_stock: 2 },
    { name: "D·∫ßu ƒÉn", category: "gia_v·ªã", unit: "l√≠t", cost: 45000, min_stock: 2 },
    { name: "Mu·ªëi", category: "gia_v·ªã", unit: "kg", cost: 8000, min_stock: 1 },
    { name: "Ti√™u", category: "gia_v·ªã", unit: "kg", cost: 180000, min_stock: 0.2 },
    { name: "Gi·∫•m", category: "gia_v·ªã", unit: "l√≠t", cost: 35000, min_stock: 1 },
    
    // ƒê·ªì u·ªëng (2 lo·∫°i)
    { name: "Coca Cola", category: "ƒë·ªì_u·ªëng", unit: "c√°i", cost: 12000, min_stock: 24 },
    { name: "Mirinda", category: "ƒë·ªì_u·ªëng", unit: "c√°i", cost: 12000, min_stock: 24 },
    
    // Kh√°c (1 lo·∫°i)
    { name: "Tr·ª©ng", category: "kh√°c", unit: "c√°i", cost: 3500, min_stock: 30 }
];

async function cleanupInventory() {
    await mongoose.connect(process.env.MONGODB_URI);
    
    try {
        console.log('üßπ D·ªçn d·∫πp nguy√™n li·ªáu tr√πng l·∫∑p...');
        
        // X√≥a t·∫•t c·∫£ inventory v√† recipe c≈©
        await Inventory.deleteMany({});
        await MenuItemRecipe.deleteMany({});
        console.log('‚úÖ ƒê√£ x√≥a d·ªØ li·ªáu c≈©');
        
        // T·∫°o l·∫°i v·ªõi danh s√°ch h·ª£p l√Ω
        for (const item of essentialIngredients) {
            await Inventory.create({
                name: item.name,
                category: item.category,
                unit: item.unit,
                cost_per_unit: item.cost,
                min_stock_level: item.min_stock,
                current_stock: 0,
                supplier: 'C·∫ßn c·∫≠p nh·∫≠t nh√† cung c·∫•p',
                is_active: true
            });
            console.log(`  ‚úÖ T·∫°o: ${item.name}`);
        }
        
        console.log(`\nüéâ D·ªçn d·∫πp ho√†n th√†nh!`);
        console.log(`üì¶ T·∫°o ${essentialIngredients.length} nguy√™n li·ªáu c∆° b·∫£n`);
        console.log(`üè∑Ô∏è  Ph√¢n lo·∫°i:`);
        console.log(`   - Th·ªãt c√°: 6 lo·∫°i`);
        console.log(`   - Rau c·ªß: 6 lo·∫°i`);
        console.log(`   - ƒê·ªì kh√¥: 5 lo·∫°i`);
        console.log(`   - Gia v·ªã: 6 lo·∫°i`);
        console.log(`   - ƒê·ªì u·ªëng: 2 lo·∫°i`);
        console.log(`   - Kh√°c: 1 lo·∫°i`);
        
    } catch (error) {
        console.error('‚ùå L·ªói:', error);
    } finally {
        await mongoose.connection.close();
        process.exit(0);
    }
}

// Ch·∫°y script
if (require.main === module) {
    cleanupInventory();
}

module.exports = cleanupInventory;
